[{"/Users/rainrobinson/Desktop/projects/recipes/src/index.js":"1","/Users/rainrobinson/Desktop/projects/recipes/src/reportWebVitals.js":"2","/Users/rainrobinson/Desktop/projects/recipes/src/App.js":"3","/Users/rainrobinson/Desktop/projects/recipes/src/Recipe.js":"4"},{"size":500,"mtime":1608237188899,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608237188899,"results":"7","hashOfConfig":"6"},{"size":1699,"mtime":1608240272743,"results":"8","hashOfConfig":"6"},{"size":517,"mtime":1608240608819,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"zu4q98",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rainrobinson/Desktop/projects/recipes/src/index.js",[],["20","21"],"/Users/rainrobinson/Desktop/projects/recipes/src/reportWebVitals.js",[],"/Users/rainrobinson/Desktop/projects/recipes/src/App.js",["22","23"],"import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react'\nimport Recipe from './Recipe.js'\n\nfunction App() {\n\n  const APP_ID = '4dbe9c5a'\n  const APP_KEY = '02f2588dc9571bf842ef12f46aaac650'\n\n  // useEffect(() => {\n  //   console.log('effect has been run')\n  //   // an empty array means that this will render once upon page load \n  //   // if you add a variable into the array, it will render everytime that variable's value changes \n  // }, [])\n\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('chicken')\n\n  useEffect (() => {\n    getRecipes()\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data = await response.json()\n    setRecipes(data.hits)\n  } \n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = e => {\n    e.preventDefault()\n    setQuery(search)\n    setSearch('')\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}></input>        \n        <button type=\"submit\" className=\"search-btn\">Search</button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe \n          key={recipe.recipe.label}\n          title={recipe.recipe.label} \n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n          />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rainrobinson/Desktop/projects/recipes/src/Recipe.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":23,"column":6,"nodeType":"34","endLine":23,"endColumn":13,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [getRecipes, query]",{"range":"41","text":"42"},[665,672],"[getRecipes, query]"]